
networks:
  monitoring:
    driver: bridge

volumes:
   prometheus_data:
   grafana_data:


services:

  notes-app:
    image: notes-app:latest # image-name and its version
    build:
      context: django-notes-app/. # because Dockerfile is inside this folder
    container_name: notes-app
    ports:
      - "8000:8000" # app will run on this port
    networks:
      -  monitoring


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - monitoring

  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
    - 8080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring
    depends_on:
    - redis
  redis:
    image: redis:latest
    container_name: redis
    ports:
    - 6379:6379


  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - monitoring
  
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring
    depends_on:
      - prometheus 

  # 1. Notes-app - based on Django runnning on 8000 port
  # 2. prometheus - taken metrics data , query and alerting server run on 9090 port
  # 3. cadvisor - used to taken metrics data from multiple Docker Container running on local system and provide data to prometheus , shows metrics on 8080 port
  # 4. node-exporter - used to taken metrics data from local system and provide data to prometheus , shows metrics on 9100 port
  # 5. grafana - used to visualize data received from prometheus , shows metrics visualization on 3000 port 





